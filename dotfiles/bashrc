# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# alias for xsel
# courtesy: Network Chuck

alias pbcopy='xsel --input --clipboard'
alias pbpaste='xsel --input --clipboard'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Initialize the Modules environment (assuming you're using environment modules)
. /usr/share/Modules/init/sh

# Use Intel OneAPI module files
module use /opt/intel/oneapi_modulesfiles

# Use Quantum ESPRESSO module files
module use /opt/qe/qe-7.3/qe_modulesfiles

# Add development directory to PATH
export PATH="/home/rajeshprashanth/devel:$PATH"

# Add XCrySDen directory to PATH
export PATH="/home/rajeshprashanth/xcrysden:$PATH"

# Add local bin directory to PATH
export PATH="/home/rajeshprashanth/local_bin:$PATH"

export PS1='\[\e[1;34m\]┌──(\[\e[0;36m\]\u\[\e[m\]@\[\e[0;33m\]\h\[\e[m\])-[\[\e[1;31m\]\[\e[0;31m\]\w\[\e[m\]]\n\[\e[1;34m\]└─\$ \[\e[m\]'
